# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

version: 2

# `go tool` configuration that is used by `go build`.
builds:
  - id: "gtee"
    main: "."
    binary: "gtee"
    ldflags:
     - "-s" # Omit the symbol table and debug information.
     - "-w" # Omit the DWARF symbol table.
    buildmode: ""
    env:
      - CGO_ENABLED=0
    goos:
      - "linux"
      - "darwin"
    goarch:
      - "amd64"
      - "arm64"
    goamd64:
      - v1
    goarm64:
      - v8.0
    ignore:
      - goos: "linux"
        goarch: "arm64"
      - goos: "darwin"
        goarch: "amd64"
    tool: "go"
    command: "build"
    mod_timestamp: "{{ .CommitTimestamp }}"
    # Build every single binary combination under ./dist. No subdirectories.
    no_unique_dist_dir: true 
    # Function main is at root, no need to check subdirs.
    no_main_check: true 
    # Main dir that contains Go code. It's the same that is used with 'go build' or other Go commands.
    dir: "." 
    builder: "go"

# Configuration for each binary archive.
archives:
  - id: gtee-archives
    builds:
      - gtee
    format: "tar.gz"
    # This name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_{{- title .Os }}_{{- if eq .Arch "amd64" }}x86_64{{- else }}{{ .Arch }}{{ end }}_{{ .Version }}

    # When the archive is unarchived, everything is extraced under a directory with the same name as archive.
    wrap_in_directory: true 
    # File stats which is applied to all binaries.
    builds_info: 
      group: root
      owner: root
      mode: 0644
    # Additional files (Defaults are used except CHANGELOG to explicitly show what goes into an archive).
    files: 
      - LICENSE
      - README.md
    # Disables the binary count check.
    allow_different_binary_count: true


changelog:
  # Enable generating a changelog on each release.
  disable: false
  # The changelog generation implementation. Extracts information from `git log`.
  use: git
  # Changelog format.
  format: "{{.SHA}}: {{.Message}} (@{{.AuthorUsername}})"
  sort: "desc"
  # Exclude commits which matches the regexp listed below.
  filters:
    exclude:
      - "^docs:"
      - "^test:"

release:
  footer: >-

    ---

    Released by [GoReleaser](https://github.com/goreleaser/goreleaser).
